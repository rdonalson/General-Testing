/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './dynamic-html.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from './renderer';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
export var Wrapper_DynamicHTMLComponent = (function () {
    function Wrapper_DynamicHTMLComponent(p0, p1) {
        this.changed = false;
        this.changes = {};
        this.context = new import0.DynamicHTMLComponent(p0, p1);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_DynamicHTMLComponent.prototype.check_content = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this.changed = true;
            this.context.content = currValue;
            this.changes['content'] = new import1.SimpleChange(this._expr_0, currValue);
            this._expr_0 = currValue;
        }
    };
    Wrapper_DynamicHTMLComponent.prototype.detectChangesInInputProps = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if (changed) {
                this.context.ngOnChanges(this.changes);
                this.changes = {};
            }
            this.context.ngDoCheck();
        }
        return changed;
    };
    Wrapper_DynamicHTMLComponent.prototype.detectChangesInHostProps = function (view, el, throwOnChange) {
    };
    return Wrapper_DynamicHTMLComponent;
}());
var renderType_DynamicHTMLComponent_Host = null;
var _View_DynamicHTMLComponent_Host0 = (function (_super) {
    __extends(_View_DynamicHTMLComponent_Host0, _super);
    function _View_DynamicHTMLComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_DynamicHTMLComponent_Host0, renderType_DynamicHTMLComponent_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_DynamicHTMLComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import2.selectOrCreateRenderHostElement(this.renderer, 'dynamic-html', import2.EMPTY_INLINE_ARRAY, rootSelector, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_DynamicHTMLComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._DynamicHTMLComponent_0_4 = new Wrapper_DynamicHTMLComponent(this.parentInjector.get(import8.DynamicHTMLRenderer), new import9.ElementRef(this._el_0));
        this._appEl_0.initComponent(this._DynamicHTMLComponent_0_4.context, [], compView_0);
        compView_0.create(this._DynamicHTMLComponent_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_DynamicHTMLComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.DynamicHTMLComponent) && (0 === requestNodeIndex))) {
            return this._DynamicHTMLComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_DynamicHTMLComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._DynamicHTMLComponent_0_4.detectChangesInInputProps(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this._DynamicHTMLComponent_0_4.detectChangesInHostProps(this, this._el_0, throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_DynamicHTMLComponent_Host0.prototype.destroyInternal = function () {
        this._DynamicHTMLComponent_0_4.context.ngOnDestroy();
    };
    return _View_DynamicHTMLComponent_Host0;
}(import3.AppView));
function viewFactory_DynamicHTMLComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_DynamicHTMLComponent_Host === null)) {
        (renderType_DynamicHTMLComponent_Host = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, [], {}));
    }
    return new _View_DynamicHTMLComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var DynamicHTMLComponentNgFactory = new import11.ComponentFactory('dynamic-html', viewFactory_DynamicHTMLComponent_Host0, import0.DynamicHTMLComponent);
var styles_DynamicHTMLComponent = [];
var renderType_DynamicHTMLComponent = null;
var _View_DynamicHTMLComponent0 = (function (_super) {
    __extends(_View_DynamicHTMLComponent0, _super);
    function _View_DynamicHTMLComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_DynamicHTMLComponent0, renderType_DynamicHTMLComponent, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_DynamicHTMLComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this.init([], [], [], []);
        return null;
    };
    return _View_DynamicHTMLComponent0;
}(import3.AppView));
export function viewFactory_DynamicHTMLComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_DynamicHTMLComponent === null)) {
        (renderType_DynamicHTMLComponent = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, styles_DynamicHTMLComponent, {}));
    }
    return new _View_DynamicHTMLComponent0(viewUtils, parentInjector, declarationEl);
}
