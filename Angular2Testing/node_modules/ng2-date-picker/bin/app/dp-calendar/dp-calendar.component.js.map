{"version":3,"sources":["../src/app/dp-calendar/dp-calendar.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAuF,eAAe,CAAC,CAAA;AACvG,iCAA8B,4BAA4B,CAAC,CAAA;AAgE3D;IAOE,6BAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAJ/B,gBAAW,GAAG,IAAI,mBAAY,EAAE,CAAC;IAKtD,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAChG,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAC9G,CAAC;IAED,yCAAW,GAAX,UAAY,OAAsB;QACzB,+BAAQ,CAAY;QAC3B,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAChG,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnB,CAAC;IACH,CAAC;IAED,2CAAa,GAAb,UAAc,GAAiB;QAC7B,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/D,CAAC;IAED,uCAAS,GAAT,UAAU,GAAiB;QACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,QAAG,EAAC,CAAC,CAAC;IAC/B,CAAC;IA7BD;QAAC,YAAK,EAAE;;uDAAA;IACR;QAAC,YAAK,EAAE;;yDAAA;IACR;QAAC,aAAM,CAAC,WAAW,CAAC;;4DAAA;IA9DtB;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,w0BAqBT;YACD,MAAM,EAAE,CAAC,mtBAgCR,CAAC;YACF,SAAS,EAAE,CAAC,kCAAe,CAAC;SAC7B,CAAC;;2BAAA;IAgCF,0BAAC;AAAD,CA/BA,AA+BC,IAAA;AA/BY,2BAAmB,sBA+B/B,CAAA","file":"dp-calendar.component.js","sourcesContent":["import {Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges} from '@angular/core';\nimport {CalendarService} from './service/calendar.service';\nimport {ICalendarConfig} from './config/calendar-config.model';\nimport {ICalendarDay} from './config/day.model';\nimport {Moment} from 'moment';\n\n@Component({\n  selector: 'dp-calendar',\n  templateUrl: './dp-calendar.component.html',\n  styleUrls: ['./dp-calendar.component.less'],\n  providers: [CalendarService]\n})\nexport class DpCalendarComponent implements OnInit, OnChanges {\n  @Input() config: ICalendarConfig;\n  @Input() selected: Moment;\n  @Output('on-change') dateClicked = new EventEmitter();\n  weeks: ICalendarDay[][];\n  weekdays: string[];\n\n  constructor(private calendarService: CalendarService) {\n  }\n\n  ngOnInit() {\n    this.weeks = this.calendarService.generateMonthArray(this.config.firstDayOfWeek, this.config.month,\n      this.selected);\n    this.weekdays = this.calendarService.generateWeekdays(this.config.firstDayOfWeek, this.config.weekdayNames);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {selected} = changes;\n    if (selected && !selected.isFirstChange()) {\n      this.weeks = this.calendarService.generateMonthArray(this.config.firstDayOfWeek, this.config.month,\n        this.selected);\n    }\n  }\n\n  isDisabledDay(day: ICalendarDay) {\n    return this.calendarService.isDateDisabled(day, this.config);\n  }\n\n  dateClick(day: ICalendarDay) {\n    this.dateClicked.emit({day});\n  }\n}\n"]}