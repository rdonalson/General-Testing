"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var dp_day_picker_component_1 = require('../dp-day-picker/dp-day-picker.component');
var DemoComponent = (function () {
    function DemoComponent() {
        this.demoFormat = 'DD-MM-YYYY';
        this.DAYS = ['su', 'mo', 'tu', 'we', 'th', 'fr', 'sa'];
        this.material = true;
        this.required = false;
        this.disabled = false;
        this.placeholder = 'Choose a date...';
        this.config = {
            firstDayOfWeek: 'su',
            calendarsAmount: 1,
            format: 'DD-MM-YYYY',
            monthFormat: 'MMM, YYYY',
            closeOnSelect: true,
            closeOnSelectDelay: 100,
            weekdayNames: {
                su: 'sun',
                mo: 'mon',
                tu: 'tue',
                we: 'wed',
                th: 'thu',
                fr: 'fri',
                sa: 'sat'
            },
            disableKeypress: false
        };
    }
    DemoComponent.prototype.configChanged = function () {
        this.config = Object.assign({}, this.config);
    };
    ;
    DemoComponent.prototype.createCustomWeekDays = function () {
        this.config.weekdayNames = this.config.weekdayNames || {};
    };
    DemoComponent.prototype.openCalendar = function () {
        this.dayPicker.api.open();
    };
    DemoComponent.prototype.closeCalendar = function () {
        this.dayPicker.api.close();
    };
    __decorate([
        core_1.ViewChild('dayPicker'), 
        __metadata('design:type', dp_day_picker_component_1.DpDayPickerComponent)
    ], DemoComponent.prototype, "dayPicker", void 0);
    DemoComponent = __decorate([
        core_1.Component({
            selector: 'dp-demo-root',
            template: "\n    <div>\n      <div class=\"dp-description\">\n        <h2>Angular 2 Date Picker</h2>\n        <p>\n          This is a highly configurable date picker based built for Angular 2 applications. <br>\n          Bellow you will find an interactive demo with which you can play. <br>\n          Installation guide can be found in the repo README.md file.\n        </p>\n        <p>\n          Fill free to open issues, suggest improvements and submit PRs.\n        </p>\n      </div>\n\n      <div>\n        <div class=\"dp-picker-container\">\n          <form #form=\"ngForm\">\n            <dp-day-picker name=\"dateItem\"\n                           #dateItem=\"ngModel\"\n                           #dayPicker\n                           [class.dp-material]=\"material\"\n                           [(ngModel)]=\"date\"\n                           [disabled]=\"disabled\"\n                           [minDate]=\"validationMinDate\"\n                           [maxDate]=\"validationMaxDate\"\n                           [required]=\"required\"\n                           [placeholder]=\"placeholder\"\n                           [config]=\"config\">\n            </dp-day-picker>\n            <div *ngIf=\"dateItem.errors && dateItem.errors.required\">required</div>\n            <div *ngIf=\"dateItem.errors && dateItem.errors.format\">format invalid</div>\n            <div *ngIf=\"dateItem.errors && dateItem.errors.minDate\">minDate invalid</div>\n            <div *ngIf=\"dateItem.errors && dateItem.errors.maxDate\">maxDate invalid</div>\n          </form>\n        </div>\n      </div>\n\n      <div class=\"dp-attributes\">\n        <h3 class=\"dp-options-section\">Attribute options</h3>\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Material Styling (\"dp-material\" class):\n        </span>\n          <div class=\"dp-option-playground\">\n            <label>Material\n              <input type=\"radio\" [(ngModel)]=\"material\" name=\"style\" [value]=\"true\">\n            </label>\n            <label>No Styling\n              <input type=\"radio\" [(ngModel)]=\"material\" name=\"style\" [value]=\"false\">\n            </label>\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Disabled (disabled):\n        </span>\n          <div class=\"dp-option-playground\">\n            <label>Enabled\n              <input type=\"radio\" [(ngModel)]=\"disabled\" name=\"disabled\" [value]=\"false\">\n            </label>\n            <label>Disabled\n              <input type=\"radio\" [(ngModel)]=\"disabled\" name=\"disabled\" [value]=\"true\">\n            </label>\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Required Validation (required):\n        </span>\n          <div class=\"dp-option-playground\">\n            <label>Required\n              <input type=\"radio\" [(ngModel)]=\"required\" name=\"required\" [value]=\"true\">\n            </label>\n            <label>Not Required\n              <input type=\"radio\" [(ngModel)]=\"required\" name=\"required\" [value]=\"false\">\n            </label>\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Min-Date Validation (minDate):\n        </span>\n          <div class=\"dp-option-playground\">\n            <dp-day-picker class=\"dp-material\"\n                           [(ngModel)]=\"validationMinDate\"\n                           placeholder=\"Select a min date\">\n            </dp-day-picker>\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Max-Date Validation (maxDate):\n        </span>\n          <div class=\"dp-option-playground\">\n            <dp-day-picker class=\"dp-material\"\n                           [(ngModel)]=\"validationMaxDate\"\n                           placeholder=\"Select a max date\">\n            </dp-day-picker>\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Placeholder (placeholder):\n        </span>\n          <div class=\"dp-option-playground\">\n            <input type=\"text\" placeholder=\"Put a placeholder\" [(ngModel)]=\"placeholder\"/>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"dp-configs\">\n        <h3 class=\"dp-options-section\">Config options</h3>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          First Day of The week (firstDayOfWeek):\n        </span>\n          <div class=\"dp-option-playground\">\n            <select [(ngModel)]=\"config.firstDayOfWeek\" (change)=\"configChanged()\">\n              <option *ngFor=\"let day of DAYS\" [value]=\"day\"> {{day}}</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Amount of Calendars (calendarsAmount):\n        </span>\n          <div class=\"dp-option-playground\">\n            <input type=\"number\" [(ngModel)]=\"config.calendarsAmount\" (change)=\"configChanged()\">\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Date Format (format):\n        </span>\n          <div class=\"dp-option-playground\">\n            <input type=\"text\" [(ngModel)]=\"config.format\" (change)=\"configChanged()\">\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Month Format (monthFormat):\n        </span>\n          <div class=\"dp-option-playground\">\n            <input type=\"text\" [(ngModel)]=\"config.monthFormat\" (change)=\"configChanged()\">\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Min Selectable Date (min):\n        </span>\n          <div class=\"dp-option-playground\">\n            <dp-day-picker class=\"dp-material\"\n                           [(ngModel)]=\"config.min\"\n                           (ngModelChange)=\"configChanged()\"\n                           placeholder=\"Select a min date\">\n            </dp-day-picker>\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Max Selectable Date (max):\n        </span>\n          <div class=\"dp-option-playground\">\n            <dp-day-picker class=\"dp-material\"\n                           [(ngModel)]=\"config.max\"\n                           (ngModelChange)=\"configChanged()\"\n                           placeholder=\"Select a max date\">\n            </dp-day-picker>\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Close after selection (closeOnSelect):\n        </span>\n          <div class=\"dp-option-playground\">\n            <label>Close\n              <input type=\"radio\" [(ngModel)]=\"config.closeOnSelect\" name=\"closeOnSelect\" [value]=\"true\" (ngModelChange)=\"configChanged()\">\n            </label>\n            <label>Don't Close\n              <input type=\"radio\" [(ngModel)]=\"config.closeOnSelect\" name=\"closeOnSelect\" [value]=\"false\" (ngModelChange)=\"configChanged()\">\n            </label>\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Closing Delay in ms (closeOnSelectDelay):\n        </span>\n          <div class=\"dp-option-playground\">\n            <input type=\"number\" [(ngModel)]=\"config.closeOnSelectDelay\" (change)=\"configChanged()\">\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Weekday Names (weekdayNames):\n        </span>\n          <div class=\"dp-option-playground dp-week-days\">\n            <input type=\"text\" [(ngModel)]=\"config.weekdayNames.su\" (change)=\"configChanged()\">\n            <input type=\"text\" [(ngModel)]=\"config.weekdayNames.mo\" (change)=\"configChanged()\">\n            <input type=\"text\" [(ngModel)]=\"config.weekdayNames.tu\" (change)=\"configChanged()\">\n            <input type=\"text\" [(ngModel)]=\"config.weekdayNames.we\" (change)=\"configChanged()\">\n            <input type=\"text\" [(ngModel)]=\"config.weekdayNames.th\" (change)=\"configChanged()\">\n            <input type=\"text\" [(ngModel)]=\"config.weekdayNames.fr\" (change)=\"configChanged()\">\n            <input type=\"text\" [(ngModel)]=\"config.weekdayNames.sa\" (change)=\"configChanged()\">\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n        <span class=\"dp-option-header\">\n          Disable keyboard on input (disableKeypress):\n        </span>\n          <div class=\"dp-option-playground\">\n            <label>Disable\n              <input type=\"radio\" [(ngModel)]=\"config.disableKeypress\" name=\"disableKeypress\" [value]=\"true\" (ngModelChange)=\"configChanged()\">\n            </label>\n            <label>Enable\n              <input type=\"radio\" [(ngModel)]=\"config.disableKeypress\" name=\"disableKeypress\" [value]=\"false\" (ngModelChange)=\"configChanged()\">\n            </label>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"dp-api\">\n        <h3 class=\"dp-options-section\">API</h3>\n\n        <div class=\"dp-option\">\n          <span class=\"dp-option-header\">\n            Open (api.open()):\n          </span>\n          <div class=\"dp-option-playground\">\n            <button (click)=\"openCalendar()\">Open</button>\n          </div>\n        </div>\n\n        <div class=\"dp-option\">\n          <span class=\"dp-option-header\">\n            Close (api.close()):\n          </span>\n          <div class=\"dp-option-playground\">\n            <button (click)=\"closeCalendar()\">Close</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"dp-configs-container\">\n      <h3>Attributes Values</h3>\n      <div class=\"dp-attribute-options\">\n          <pre><code class=\"html\">\n    [class.dp-material]=\"{{material}}\"\n    [disabled]=\"{{disabled}}\"\n    [required]=\"{{required}}\"\n    [minDate]=\"{{validationMinDate && validationMinDate.format(demoFormat)}}\"\n    [maxDate]=\"{{validationMaxDate && validationMaxDate.format(demoFormat)}}\"\n    [placeholder]=\"{{placeholder}}\"\n            </code>\n          </pre>\n      </div>\n      <h3>Configuration Object Values</h3>\n      <div class=\"dp-config-object\">\n        <pre><code>{{config | json}}</code></pre>\n        {{example | json}}\n      </div>\n    </div>\n  ",
            entryComponents: [dp_day_picker_component_1.DpDayPickerComponent],
            styles: ["\n    h3 {\n      margin-bottom: 0;\n    }\n    .dp-options-section {\n      text-decoration: underline;\n    }\n    .dp-picker-container {\n      margin: 20px auto;\n      width: 212px;\n    }\n    .dp-attributes,\n    .dp-configs,\n    .dp-api {\n      width: 350px;\n      display: inline-block;\n      vertical-align: top;\n    }\n    .dp-configs-container pre {\n      text-align: left;\n      margin: 0;\n    }\n    .dp-option {\n      padding: 10px;\n    }\n    .dp-option:nth-child(odd) {\n      background: rgba(204, 204, 204, 0.2);\n    }\n    .dp-week-days input {\n      width: 37px;\n    }\n    pre code {\n      display: block;\n      background: #EFF0F1;\n    }\n    .dp-option-header {\n      font-weight: 600;\n    }\n  "]
        }), 
        __metadata('design:paramtypes', [])
    ], DemoComponent);
    return DemoComponent;
}());
exports.DemoComponent = DemoComponent;

//# sourceMappingURL=demo.component.js.map
